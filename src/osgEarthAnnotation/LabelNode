/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2010 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#ifndef OSGEARTH_ANNOTATION_LABEL_NODE_H
#define OSGEARTH_ANNOTATION_LABEL_NODE_H 1

#include <osgEarthAnnotation/LocalizedNode>
#include <osgEarthSymbology/TextSymbol>
#include <osgEarth/MapNode>

namespace osgEarth { namespace Annotation
{	
    using namespace osgEarth;
    using namespace osgEarth::Symbology;

    struct OSGEARTHANNO_EXPORT LabelUtils
    {
        static osg::Drawable* createText(
            const osg::Vec3&   positionOffset,
            const std::string& text,
            const TextSymbol*  symbol );
    };

    /**
     * Text labeling node.
     */
    class OSGEARTHANNO_EXPORT LabelNode : public OrthoNode // LocalizedNode
    {
    public:
        /**
         * Constructs a label node that is positioned relative to a map.
         */
        LabelNode(
            MapNode*                mapNode,
            const osg::Vec3d&       position,
            const std::string&      text,
            const TextSymbol*       symbol =0L ); 

        /**
         * Constructs a label node that is positioned relative to a map
         * point (referneced by the spatial reference)
         */
        LabelNode(
            const SpatialReference* mapSRS,
            const osg::Vec3d&       position,
            const std::string&      text,
            const TextSymbol*       symbol =0L );

    protected:
        void init( const TextSymbol* symbol );

        std::string _text;
    };

} } // namespace osgEarth::Annotation

#endif // OSGEARTH_ANNOTATION_LABEL_NODE_H
