/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2010 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_TEXTURE_COMPOSITOR_TEX_ARRAY_H
#define OSGEARTH_TEXTURE_COMPOSITOR_TEX_ARRAY_H 1

#include <osgEarth/TextureCompositor>

// only in newer OSG versions.
#if OSG_VERSION_GREATER_OR_EQUAL( 2, 9, 8 )

namespace osgEarth
{
    /**
     * TODO: document
     */
    class TextureCompositorTexArray : public TextureCompositorTechnique
    {
    public:
        void updateMasterStateSet( osg::StateSet* stateSet, const TextureLayout& layout ) const;

        bool requiresUnitTextureSpace() const { return true; }

        bool usesShaderComposition() const { return true; }

        bool supportsLayerUpdate() const { return true; }

        GeoImage prepareImage( const GeoImage& layerImage, const GeoExtent& tileExtent ) const;

        void applyLayerUpdate( 
            osg::StateSet* stateSet,
            UID layerUID, 
            const GeoImage& preparedImage,
            const GeoExtent& tileExtent,
            const TextureLayout& layout ) const;

        osg::Shader* createSamplerFunction( UID layerUID, const std::string& functionName, osg::Shader::Type type, const TextureLayout& layout ) const;
    };
}

#endif // OSG_VERSION_GREATER_OR_EQUAL( 2, 9, 8 )

#endif // OSGEARTH_TEXTURE_COMPOSITOR_TEX_ARRAY_H
